{"ast":null,"code":"export let Gender;\n\n(function (Gender) {\n  Gender[\"Male\"] = \"male\";\n  Gender[\"Female\"] = \"female\";\n  Gender[\"Other\"] = \"other\";\n})(Gender || (Gender = {}));\n\nexport let HealthCheckRating;\n\n(function (HealthCheckRating) {\n  HealthCheckRating[HealthCheckRating[\"Healthy\"] = 0] = \"Healthy\";\n  HealthCheckRating[HealthCheckRating[\"LowRisk\"] = 1] = \"LowRisk\";\n  HealthCheckRating[HealthCheckRating[\"HighRisk\"] = 2] = \"HighRisk\";\n  HealthCheckRating[HealthCheckRating[\"CriticalRisk\"] = 3] = \"CriticalRisk\";\n})(HealthCheckRating || (HealthCheckRating = {}));","map":{"version":3,"sources":["/Users/racheleiting/Desktop/UofHelsinkiFullStackCourse/Part 9/patientor/frontend/patientor/src/types.ts"],"names":["Gender","HealthCheckRating"],"mappings":"AAMA,WAAYA,MAAZ;;WAAYA,M;AAAAA,EAAAA,M;AAAAA,EAAAA,M;AAAAA,EAAAA,M;GAAAA,M,KAAAA,M;;AAcZ,WAAYC,iBAAZ;;WAAYA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;GAAAA,iB,KAAAA,iB","sourcesContent":["export interface Diagnosis {\n  code: string;\n  name: string;\n  latin?: string;\n}\n\nexport enum Gender {\n  Male = \"male\",\n  Female = \"female\",\n  Other = \"other\",\n}\n\nexport interface BaseEntry {\n  id: string;\n  description: string;\n  date: string;\n  specialist: string;\n  diagnosisCodes?: Array<Diagnosis[\"code\"]>;\n}\n\nexport enum HealthCheckRating {\n  \"Healthy\" = 0,\n  \"LowRisk\" = 1,\n  \"HighRisk\" = 2,\n  \"CriticalRisk\" = 3,\n}\n\nexport interface HealthCheckEntry extends BaseEntry {\n  type: \"HealthCheck\";\n  healthCheckRating: HealthCheckRating;\n}\n\nexport interface OccupationalHealthcareEntry extends BaseEntry {\n  type: \"OccupationalHealthcare\";\n  employerName: string;\n  sickLeave?: { startDate: string; endDate: string };\n}\n\nexport interface HospitalEntry extends BaseEntry {\n  type: \"Hospital\";\n  discharge?: { date: string; criteria: string };\n}\n\nexport type Entry =\n  | HospitalEntry\n  | OccupationalHealthcareEntry\n  | HealthCheckEntry;\n\nexport type NewEntry =\n  | Omit<HospitalEntry, \"id\">\n  | Omit<OccupationalHealthcareEntry, \"id\">\n  | Omit<HealthCheckEntry, \"id\">;\n\nexport interface Patient {\n  id: string;\n  name: string;\n  occupation: string;\n  gender: Gender;\n  ssn?: string;\n  dateOfBirth?: string;\n  entries: Entry[];\n}"]},"metadata":{},"sourceType":"module"}