{"ast":null,"code":"var _jsxFileName = \"/Users/racheleiting/Desktop/UofHelsinkiFullStackCourse/Part 9/patientor/frontend/patientor/src/AddPatientModal/AddPatientForm.tsx\";\nimport React from \"react\";\nimport { Grid, Button } from \"semantic-ui-react\";\nimport { Field, Formik, Form } from \"formik\";\nimport { TextField, SelectField } from \"./FormField\";\nimport { Gender } from \"../types\";\n/*\n * use type Patient, but omit id and entries,\n * because those are irrelevant for new patient object.\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst genderOptions = [{\n  value: Gender.Male,\n  label: \"Male\"\n}, {\n  value: Gender.Female,\n  label: \"Female\"\n}, {\n  value: Gender.Other,\n  label: \"Other\"\n}];\nexport const AddPatientForm = ({\n  onSubmit,\n  onCancel\n}) => {\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      name: \"\",\n      ssn: \"\",\n      dateOfBirth: \"\",\n      occupation: \"\",\n      gender: Gender.Other\n    },\n    onSubmit: onSubmit,\n    validate: values => {\n      const requiredError = \"Field is required\";\n      const errors = {};\n\n      if (!values.name) {\n        errors.name = requiredError;\n      }\n\n      if (!values.ssn) {\n        errors.ssn = requiredError;\n      }\n\n      if (!values.dateOfBirth) {\n        errors.dateOfBirth = requiredError;\n      }\n\n      if (!values.occupation) {\n        errors.occupation = requiredError;\n      }\n\n      return errors;\n    },\n    children: ({\n      isValid,\n      dirty\n    }) => {\n      return /*#__PURE__*/_jsxDEV(Form, {\n        className: \"form ui\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          label: \"Name\",\n          placeholder: \"Name\",\n          name: \"name\",\n          component: TextField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          label: \"Social Security Number\",\n          placeholder: \"SSN\",\n          name: \"ssn\",\n          component: TextField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          label: \"Date Of Birth\",\n          placeholder: \"YYYY-MM-DD\",\n          name: \"dateOfBirth\",\n          component: TextField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          label: \"Occupation\",\n          placeholder: \"Occupation\",\n          name: \"occupation\",\n          component: TextField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n          label: \"Gender\",\n          name: \"gender\",\n          options: genderOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n            floated: \"left\",\n            width: 5,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              onClick: onCancel,\n              color: \"red\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n            floated: \"right\",\n            width: 5,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              floated: \"right\",\n              color: \"green\",\n              disabled: !dirty || !isValid,\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c = AddPatientForm;\nexport default AddPatientForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPatientForm\");","map":{"version":3,"sources":["/Users/racheleiting/Desktop/UofHelsinkiFullStackCourse/Part 9/patientor/frontend/patientor/src/AddPatientModal/AddPatientForm.tsx"],"names":["React","Grid","Button","Field","Formik","Form","TextField","SelectField","Gender","genderOptions","value","Male","label","Female","Other","AddPatientForm","onSubmit","onCancel","name","ssn","dateOfBirth","occupation","gender","values","requiredError","errors","isValid","dirty"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Grid, Button } from \"semantic-ui-react\";\nimport { Field, Formik, Form } from \"formik\";\n\nimport { TextField, SelectField, GenderOption } from \"./FormField\";\nimport { Gender, Patient } from \"../types\";\n\n/*\n * use type Patient, but omit id and entries,\n * because those are irrelevant for new patient object.\n */\nexport type PatientFormValues = Omit<Patient, \"id\" | \"entries\">;\n\ninterface Props {\n  onSubmit: (values: PatientFormValues) => void;\n  onCancel: () => void;\n}\n\nconst genderOptions: GenderOption[] = [\n  { value: Gender.Male, label: \"Male\" },\n  { value: Gender.Female, label: \"Female\" },\n  { value: Gender.Other, label: \"Other\" }\n];\n\nexport const AddPatientForm = ({ onSubmit, onCancel } : Props ) => {\n  return (\n    <Formik\n      initialValues={{\n        name: \"\",\n        ssn: \"\",\n        dateOfBirth: \"\",\n        occupation: \"\",\n        gender: Gender.Other\n      }}\n      onSubmit={onSubmit}\n      validate={values => {\n        const requiredError = \"Field is required\";\n        const errors: { [field: string]: string } = {};\n        if (!values.name) {\n          errors.name = requiredError;\n        }\n        if (!values.ssn) {\n          errors.ssn = requiredError;\n        }\n        if (!values.dateOfBirth) {\n          errors.dateOfBirth = requiredError;\n        }\n        if (!values.occupation) {\n          errors.occupation = requiredError;\n        }\n        return errors;\n      }}\n    >\n      {({ isValid, dirty }) => {\n        return (\n          <Form className=\"form ui\">\n            <Field\n              label=\"Name\"\n              placeholder=\"Name\"\n              name=\"name\"\n              component={TextField}\n            />\n            <Field\n              label=\"Social Security Number\"\n              placeholder=\"SSN\"\n              name=\"ssn\"\n              component={TextField}\n            />\n            <Field\n              label=\"Date Of Birth\"\n              placeholder=\"YYYY-MM-DD\"\n              name=\"dateOfBirth\"\n              component={TextField}\n            />\n            <Field\n              label=\"Occupation\"\n              placeholder=\"Occupation\"\n              name=\"occupation\"\n              component={TextField}\n            />\n            <SelectField\n              label=\"Gender\"\n              name=\"gender\"\n              options={genderOptions}\n            />\n            <Grid>\n              <Grid.Column floated=\"left\" width={5}>\n                <Button type=\"button\" onClick={onCancel} color=\"red\">\n                  Cancel\n                </Button>\n              </Grid.Column>\n              <Grid.Column floated=\"right\" width={5}>\n                <Button\n                  type=\"submit\"\n                  floated=\"right\"\n                  color=\"green\"\n                  disabled={!dirty || !isValid}\n                >\n                  Add\n                </Button>\n              </Grid.Column>\n            </Grid>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default AddPatientForm;\n"]},"metadata":{},"sourceType":"module"}